
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module DE10_LITE_Golden_Top(

	//////////// CLOCK //////////
	input 		          		ADC_CLK_10,
	input 		          		MAX10_CLK1_50,
	input 		          		MAX10_CLK2_50,

	//////////// SDRAM //////////
	output		    [12:0]		DRAM_ADDR,
	output		     [1:0]		DRAM_BA,
	output		          		DRAM_CAS_N,
	output		          		DRAM_CKE,
	output		          		DRAM_CLK,
	output		          		DRAM_CS_N,
	inout 		    [15:0]		DRAM_DQ,
	output		          		DRAM_LDQM,
	output		          		DRAM_RAS_N,
	output		          		DRAM_UDQM,
	output		          		DRAM_WE_N,

	//////////// SEG7 //////////
	output 		     [7:0]		HEX0,
	output		     [7:0]		HEX1,
	output		     [7:0]		HEX2,
	output		     [7:0]		HEX3,
	output		     [7:0]		HEX4,
	output		     [7:0]		HEX5,

	//////////// KEY //////////
	input 		     [1:0]		KEY,

	//////////// LED //////////
	output		     [9:0]		LEDR,

	//////////// SW //////////
	input 		     [9:0]		SW,

	//////////// VGA //////////
	output		     [3:0]		VGA_B,
	output		     [3:0]		VGA_G,
	output		          		VGA_HS,
	output		     [3:0]		VGA_R,
	output		          		VGA_VS,

	//////////// Accelerometer //////////
	output		          		GSENSOR_CS_N,
	input 		     [2:1]		GSENSOR_INT,
	output		          		GSENSOR_SCLK,
	inout 		          		GSENSOR_SDI,
	inout 		          		GSENSOR_SDO,

	//////////// Arduino //////////
	inout 		    [15:0]		ARDUINO_IO,
	inout 		          		ARDUINO_RESET_N,

	//////////// GPIO, GPIO connect to GPIO Default //////////
	inout 		    [35:0]		GPIO
	
	);




//=======================================================
//  REG/WIRE declarations
//=======================================================

wire	[3:0] line1H,line2H,line1M,line2M,line1S,line2S;
wire  [4:0] Seg12,H_am_pm,H_2_7seg;
wire	[5:0] Seg34,Seg56;
wire  [31:0] count,userTime,userDate;
wire  [1:0] finalStage;
wire  [7:0] h0,h1,h2,h3,h4,h5;
wire  activeState,CLK,tmp,am_pm_flag,pmStateFlag,DateOrTime,flashFlag,alarm,ledToBlink;

//=======================================================
//  Structural coding
//=======================================================

RTC_executable rtc(userTime,userDate); //from gui
secgen s(.resetN(1), .clk(MAX10_CLK1_50), .run_stopN(1), .t_out(CLK), .sym_out(tmp)); //convert 50MHZ clock to regular clock
StateMachine sm1(MAX10_CLK1_50,SW,CLK,KEY,userTime,userDate,count,finalStage,activeState,ledToBlink,DateOrTime,flashFlag);
//																	StartMachine

ledBlink lb(ledToBlink,CLK,alarm); //blinkWhenAlarm 
assign LEDR[9]=am_pm_flag; //len on when ampm mode on
assign am_pm_flag=SW[9] | flashFlag;
assign LEDR[8]=(pmStateFlag&am_pm_flag)| flashFlag; //len on when the ampm is active
assign LEDR[0] = flashFlag? 1:alarm; //len on when alaram
assign LEDR[7:1] = flashFlag ? 7'b111_1111 : 7'b000_0000; //led on all when flash mode.



am_pm ap(MAX10_CLK1_50,am_pm_flag,Seg12,H_am_pm,pmStateFlag); //covert time to ampm

Mux2_DateOrTime(count,DateOrTime,Seg12,Seg34,Seg56); //print to 7seg Date or Time

Mux2_1 m2(Seg12,H_am_pm,am_pm_flag&~DateOrTime,H_2_7seg); //print the hour by ampm


NumTo7SegmentWithFlashFlag N1(H_2_7seg,flashFlag,line1H,line2H); //hours to 2 7seg and flash
NumTo7SegmentWithFlashFlag N2(Seg34,flashFlag,line1M,line2M);    //minutes to 2 7seg and flash
NumTo7SegmentWithFlashFlag N3(Seg56,flashFlag,line1S,line2S);    //seconds to 2 7seg and flash

assign GPIO[10] = ledToBlink; 
assign GPIO[12] = SW[7];

HEXDRV H0(line2S,h0);
halfSecGenNew(MAX10_CLK1_50,h0,finalStage,2,activeState,HEX0);
HEXDRV H1(line1S,h1);
halfSecGenNew(MAX10_CLK1_50,h1,finalStage,2,activeState,HEX1);

HEXDRV H2(line2M,h2);// AND logic to present the decimal point
halfSecGenNew(MAX10_CLK1_50,h2 & ~8'b10000000,finalStage,1,activeState,HEX2);
HEXDRV H3(line1M,h3);
halfSecGenNew(MAX10_CLK1_50,h3,finalStage,1,activeState,HEX3);

HEXDRV H4(line2H,h4);// AND logic to present the decimal point
halfSecGenNew(MAX10_CLK1_50,h4& ~8'b10000000,finalStage,0,activeState,HEX4);
HEXDRV H5(line1H,h5);
halfSecGenNew(MAX10_CLK1_50,h5,finalStage,0,activeState,HEX5);

endmodule
